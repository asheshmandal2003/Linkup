// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String       @id @default(uuid())
  first_name     String
  last_name      String
  username       String       @unique
  email          String       @unique
  password       String
  role           Role         @default(USER)
  verified       Boolean      @default(false)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now())
  profile        Profile?     @relation(name: "UserProfile")
  userFollowers  Connection[] @relation(name: "followers")
  userFollowings Connection[] @relation(name: "followings")

  @@index([email, username])
}

model Profile {
  id        String    @id @default(uuid())
  userId    String    @unique
  user      User      @relation(name: "UserProfile", fields: [userId], references: [id], onDelete: Cascade)
  isPrivate Boolean   @default(false)
  avatar    String?
  cover     String?
  bio       String?
  dob       DateTime?
  location  String?
}

model Connection {
  id         String @id @default(uuid())
  userId     String
  followerId String
  followings User   @relation(name: "followings", fields: [userId], references: [id], onDelete: Cascade)
  followers  User   @relation(name: "followers", fields: [followerId], references: [id], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
}
